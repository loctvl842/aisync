"""auth group

Revision ID: f1a4dd538cc2
Revises:
Create Date: 2025-02-23 15:56:27.591869

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f1a4dd538cc2"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_permission",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("resource", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auth_permission_action"), "auth_permission", ["action"], unique=False)
    op.create_index(op.f("ix_auth_permission_name"), "auth_permission", ["name"], unique=True)
    op.create_index(op.f("ix_auth_permission_resource"), "auth_permission", ["resource"], unique=False)
    op.create_table(
        "auth_role",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auth_role_name"), "auth_role", ["name"], unique=True)
    op.create_table(
        "auth_user",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auth_user_email"), "auth_user", ["email"], unique=True)
    op.create_table(
        "auth_role_permission",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=True),
        sa.Column("permission_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(["permission_id"], ["auth_permission.id"], name="fk_role_permission_permission"),
        sa.ForeignKeyConstraint(["role_id"], ["auth_role.id"], name="fk_role_permission_role"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "auth_user_role",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("role_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(["role_id"], ["auth_role.id"], name="fk_user_role_role"),
        sa.ForeignKeyConstraint(["user_id"], ["auth_user.id"], name="fk_user_role_user"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("auth_user_role")
    op.drop_table("auth_role_permission")
    op.drop_index(op.f("ix_auth_user_email"), table_name="auth_user")
    op.drop_table("auth_user")
    op.drop_index(op.f("ix_auth_role_name"), table_name="auth_role")
    op.drop_table("auth_role")
    op.drop_index(op.f("ix_auth_permission_resource"), table_name="auth_permission")
    op.drop_index(op.f("ix_auth_permission_name"), table_name="auth_permission")
    op.drop_index(op.f("ix_auth_permission_action"), table_name="auth_permission")
    op.drop_table("auth_permission")
    # ### end Alembic commands ###
