"""Setup document table

Revision ID: 5298a2bc1668
Revises: ec637a108242
Create Date: 2024-06-26 11:52:53.929792

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision: str = '5298a2bc1668'
down_revision: Union[str, None] = 'ec637a108242'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doc_collection',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('doc_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('page_content', sa.String(), nullable=False),
    sa.Column('embedding', Vector(dim=768), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_index('ix_cmetadata_gin', table_name='langchain_pg_embedding', postgresql_using='gin')
    # op.drop_index('ix_langchain_pg_embedding_id', table_name='langchain_pg_embedding')
    # op.drop_table('langchain_pg_embedding')
    # op.drop_table('langchain_pg_collection')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('langchain_pg_collection',
    # sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    # sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('uuid', name='langchain_pg_collection_pkey'),
    # sa.UniqueConstraint('name', name='langchain_pg_collection_name_key'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_table('langchain_pg_embedding',
    # sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    # sa.Column('collection_id', sa.UUID(), autoincrement=False, nullable=True),
    # sa.Column('embedding', Vector(), autoincrement=False, nullable=True),
    # sa.Column('document', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('cmetadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['collection_id'], ['langchain_pg_collection.uuid'], name='langchain_pg_embedding_collection_id_fkey', ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id', name='langchain_pg_embedding_pkey')
    # )
    # op.create_index('ix_langchain_pg_embedding_id', 'langchain_pg_embedding', ['id'], unique=True)
    # op.create_index('ix_cmetadata_gin', 'langchain_pg_embedding', ['cmetadata'], unique=False, postgresql_using='gin')
    op.drop_table('doc_collection')
    # ### end Alembic commands ###
